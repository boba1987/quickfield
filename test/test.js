// Generated by CoffeeScript 1.12.3
var expect, restartSandbox, sandbox, sandbox$, should;

mocha.setup('tdd');

mocha.slow(400);

mocha.timeout(12000);

if (!window.location.hostname) {
  mocha.bail();
}

expect = chai.expect;

should = chai.should();

sandbox$ = sandbox = null;

restartSandbox = function() {
  if (sandbox$ != null) {
    sandbox$.remove();
  }
  sandbox$ = $('<div id="sandbox" style="border:1px solid; padding:20px; box-sizing:border-box"></div>').appendTo(document.body);
  return sandbox = sandbox$[0];
};

suite("QuickField", function() {
  setup(restartSandbox);
  return test("", function() {
    window.field = Field({
      type: 'text',
      label: 'Licence Plate',
      ID: 'plate',
      mask: 'AAA-111',
      maskPlaceholder: '_'
    }).appendTo(sandbox);
    Field({
      type: 'text',
      label: 'Dollar',
      ID: 'theDollar',
      mask: '$1+',
      maskPlaceholder: '_'
    }).appendTo(sandbox);
    Field({
      type: 'text',
      label: 'Date',
      mask: '11/11/1111',
      maskPlaceholder: '_'
    }).appendTo(sandbox);
    Field({
      type: 'text',
      label: 'Literal',
      mask: 'My N\\ame is a+ K\\alen',
      maskPlaceholder: '_'
    }).appendTo(sandbox);
    Field({
      type: 'text',
      label: 'Optionals',
      mask: 'aaa[AAA]111',
      maskPlaceholder: '_'
    }).appendTo(sandbox);
    Field({
      type: 'text',
      label: 'Full Name',
      mask: 'aa+ aa+[ aa+]',
      maskPlaceholder: '_'
    }).appendTo(sandbox);
    Field({
      type: 'text',
      label: 'Phone',
      mask: '#######+',
      maskPlaceholder: '_'
    }).appendTo(sandbox);
    Field({
      type: 'text',
      label: 'Password',
      keyboard: 'password'
    }).appendTo(sandbox);
    window.field = Field({
      type: 'text',
      label: 'My options field',
      choices: ['apple', 'banana', 'orange', 'banana republic']
    }).appendTo(sandbox);
    window.field = Field({
      type: 'text',
      label: 'My Nice Field',
      conditions: [
        {
          target: 'plate',
          property: 'value'
        }
      ]
    }).appendTo(sandbox);
    window.field = Field({
      type: 'text',
      label: 'Number',
      keyboard: 'number',
      validWhenRegex: /[^0]/
    }).appendTo(sandbox);
    window.field = Field({
      type: 'text',
      label: 'Email',
      ID: 'email',
      keyboard: 'email'
    }).appendTo(sandbox);
    window.field = Field({
      type: 'choice',
      label: 'My Choices (single)',
      choices: [
        'Apple', 'Banana', 'Orange', {
          label: 'Lemon',
          value: 'lime',
          conditions: {
            'email': 'valid'
          }
        }
      ]
    }).appendTo(sandbox);
    return window.field = Field({
      type: 'choice',
      label: 'My Choices (multi)',
      choices: ['Apple', 'Banana', 'Orange', 'Lime', 'Kiwi'],
      perGroup: 3,
      multiple: true
    }).appendTo(sandbox);
  });
});

HTMLElement.prototype.onEvent = function(eventName, callback) {
  if (this.addEventListener) {
    return this.addEventListener(eventName, callback);
  } else {
    return this.attachEvent("on" + eventName, callback);
  }
};

HTMLElement.prototype.removeEvent = function(eventName, callback) {
  if (this.removeEventListener) {
    return this.removeEventListener(eventName, callback);
  } else {
    return this.detachEvent("on" + eventName, callback);
  }
};

HTMLElement.prototype.emitEvent = function(eventName) {
  var event;
  event = document.createEvent('Event');
  event.initEvent(eventName, true, false);
  return this.dispatchEvent(event);
};
